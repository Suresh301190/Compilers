State 32 conflicts: 3 shift/reduce


Grammar

    0 $accept: program $end

    1 program: block

    2 $@1: %empty

    3 block: '{' $@1 stmts '}'

    4 stmts: stmts M stmt
    5      | %empty

    6 stmt: expr ';'
    7     | IF '(' expr ')' M stmt
    8     | WHILE M '(' expr ')' M stmt
    9     | DO M stmt WHILE M '(' expr ')' ';'
   10     | block

   11 expr: ID '=' expr
   12     | expr '<' expr
   13     | expr '+' expr
   14     | expr '*' expr
   15     | '-' expr
   16     | '(' expr ')'
   17     | NUM
   18     | ID

   19 M: %empty


Terminals, with rules where they appear

$end (0) 0
'(' (40) 7 8 9 16
')' (41) 7 8 9 16
'*' (42) 14
'+' (43) 13
'-' (45) 15
';' (59) 6 9
'<' (60) 12
'=' (61) 11
'{' (123) 3
'}' (125) 3
error (256)
IF (258) 7
WHILE (259) 8 9
DO (260) 9
ID (261) 11 18
NUM (262) 17
UMINUS (263)


Nonterminals, with rules where they appear

$accept (19)
    on left: 0
program (20)
    on left: 1, on right: 0
block (21)
    on left: 3, on right: 1 10
$@1 (22)
    on left: 2, on right: 3
stmts (23)
    on left: 4 5, on right: 3 4
stmt (24)
    on left: 6 7 8 9 10, on right: 4 7 8 9
expr (25)
    on left: 11 12 13 14 15 16 17 18, on right: 6 7 8 9 11 12 13 14
    15 16
M (26)
    on left: 19, on right: 4 7 8 9


State 0

    0 $accept: . program $end

    '{'  shift, and go to state 1

    program  go to state 2
    block    go to state 3


State 1

    3 block: '{' . $@1 stmts '}'

    $default  reduce using rule 2 ($@1)

    $@1  go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: block .

    $default  reduce using rule 1 (program)


State 4

    3 block: '{' $@1 . stmts '}'

    $default  reduce using rule 5 (stmts)

    stmts  go to state 6


State 5

    0 $accept: program $end .

    $default  accept


State 6

    3 block: '{' $@1 stmts . '}'
    4 stmts: stmts . M stmt

    '}'  shift, and go to state 7

    $default  reduce using rule 19 (M)

    M  go to state 8


State 7

    3 block: '{' $@1 stmts '}' .

    $default  reduce using rule 3 (block)


State 8

    4 stmts: stmts M . stmt

    IF     shift, and go to state 9
    WHILE  shift, and go to state 10
    DO     shift, and go to state 11
    ID     shift, and go to state 12
    NUM    shift, and go to state 13
    '{'    shift, and go to state 1
    '('    shift, and go to state 14
    '-'    shift, and go to state 15

    block  go to state 16
    stmt   go to state 17
    expr   go to state 18


State 9

    7 stmt: IF . '(' expr ')' M stmt

    '('  shift, and go to state 19


State 10

    8 stmt: WHILE . M '(' expr ')' M stmt

    $default  reduce using rule 19 (M)

    M  go to state 20


State 11

    9 stmt: DO . M stmt WHILE M '(' expr ')' ';'

    $default  reduce using rule 19 (M)

    M  go to state 21


State 12

   11 expr: ID . '=' expr
   18     | ID .

    '='  shift, and go to state 22

    $default  reduce using rule 18 (expr)


State 13

   17 expr: NUM .

    $default  reduce using rule 17 (expr)


State 14

   16 expr: '(' . expr ')'

    ID   shift, and go to state 12
    NUM  shift, and go to state 13
    '('  shift, and go to state 14
    '-'  shift, and go to state 15

    expr  go to state 23


State 15

   15 expr: '-' . expr

    ID   shift, and go to state 12
    NUM  shift, and go to state 13
    '('  shift, and go to state 14
    '-'  shift, and go to state 15

    expr  go to state 24


State 16

   10 stmt: block .

    $default  reduce using rule 10 (stmt)


State 17

    4 stmts: stmts M stmt .

    $default  reduce using rule 4 (stmts)


State 18

    6 stmt: expr . ';'
   12 expr: expr . '<' expr
   13     | expr . '+' expr
   14     | expr . '*' expr

    '<'  shift, and go to state 25
    '+'  shift, and go to state 26
    '*'  shift, and go to state 27
    ';'  shift, and go to state 28


State 19

    7 stmt: IF '(' . expr ')' M stmt

    ID   shift, and go to state 12
    NUM  shift, and go to state 13
    '('  shift, and go to state 14
    '-'  shift, and go to state 15

    expr  go to state 29


State 20

    8 stmt: WHILE M . '(' expr ')' M stmt

    '('  shift, and go to state 30


State 21

    9 stmt: DO M . stmt WHILE M '(' expr ')' ';'

    IF     shift, and go to state 9
    WHILE  shift, and go to state 10
    DO     shift, and go to state 11
    ID     shift, and go to state 12
    NUM    shift, and go to state 13
    '{'    shift, and go to state 1
    '('    shift, and go to state 14
    '-'    shift, and go to state 15

    block  go to state 16
    stmt   go to state 31
    expr   go to state 18


State 22

   11 expr: ID '=' . expr

    ID   shift, and go to state 12
    NUM  shift, and go to state 13
    '('  shift, and go to state 14
    '-'  shift, and go to state 15

    expr  go to state 32


State 23

   12 expr: expr . '<' expr
   13     | expr . '+' expr
   14     | expr . '*' expr
   16     | '(' expr . ')'

    '<'  shift, and go to state 25
    '+'  shift, and go to state 26
    '*'  shift, and go to state 27
    ')'  shift, and go to state 33


State 24

   12 expr: expr . '<' expr
   13     | expr . '+' expr
   14     | expr . '*' expr
   15     | '-' expr .

    $default  reduce using rule 15 (expr)


State 25

   12 expr: expr '<' . expr

    ID   shift, and go to state 12
    NUM  shift, and go to state 13
    '('  shift, and go to state 14
    '-'  shift, and go to state 15

    expr  go to state 34


State 26

   13 expr: expr '+' . expr

    ID   shift, and go to state 12
    NUM  shift, and go to state 13
    '('  shift, and go to state 14
    '-'  shift, and go to state 15

    expr  go to state 35


State 27

   14 expr: expr '*' . expr

    ID   shift, and go to state 12
    NUM  shift, and go to state 13
    '('  shift, and go to state 14
    '-'  shift, and go to state 15

    expr  go to state 36


State 28

    6 stmt: expr ';' .

    $default  reduce using rule 6 (stmt)


State 29

    7 stmt: IF '(' expr . ')' M stmt
   12 expr: expr . '<' expr
   13     | expr . '+' expr
   14     | expr . '*' expr

    '<'  shift, and go to state 25
    '+'  shift, and go to state 26
    '*'  shift, and go to state 27
    ')'  shift, and go to state 37


State 30

    8 stmt: WHILE M '(' . expr ')' M stmt

    ID   shift, and go to state 12
    NUM  shift, and go to state 13
    '('  shift, and go to state 14
    '-'  shift, and go to state 15

    expr  go to state 38


State 31

    9 stmt: DO M stmt . WHILE M '(' expr ')' ';'

    WHILE  shift, and go to state 39


State 32

   11 expr: ID '=' expr .
   12     | expr . '<' expr
   13     | expr . '+' expr
   14     | expr . '*' expr

    '<'  shift, and go to state 25
    '+'  shift, and go to state 26
    '*'  shift, and go to state 27

    '<'       [reduce using rule 11 (expr)]
    '+'       [reduce using rule 11 (expr)]
    '*'       [reduce using rule 11 (expr)]
    $default  reduce using rule 11 (expr)


State 33

   16 expr: '(' expr ')' .

    $default  reduce using rule 16 (expr)


State 34

   12 expr: expr . '<' expr
   12     | expr '<' expr .
   13     | expr . '+' expr
   14     | expr . '*' expr

    '+'  shift, and go to state 26
    '*'  shift, and go to state 27

    '<'  error (nonassociative)

    $default  reduce using rule 12 (expr)


State 35

   12 expr: expr . '<' expr
   13     | expr . '+' expr
   13     | expr '+' expr .
   14     | expr . '*' expr

    '*'  shift, and go to state 27

    $default  reduce using rule 13 (expr)


State 36

   12 expr: expr . '<' expr
   13     | expr . '+' expr
   14     | expr . '*' expr
   14     | expr '*' expr .

    $default  reduce using rule 14 (expr)


State 37

    7 stmt: IF '(' expr ')' . M stmt

    $default  reduce using rule 19 (M)

    M  go to state 40


State 38

    8 stmt: WHILE M '(' expr . ')' M stmt
   12 expr: expr . '<' expr
   13     | expr . '+' expr
   14     | expr . '*' expr

    '<'  shift, and go to state 25
    '+'  shift, and go to state 26
    '*'  shift, and go to state 27
    ')'  shift, and go to state 41


State 39

    9 stmt: DO M stmt WHILE . M '(' expr ')' ';'

    $default  reduce using rule 19 (M)

    M  go to state 42


State 40

    7 stmt: IF '(' expr ')' M . stmt

    IF     shift, and go to state 9
    WHILE  shift, and go to state 10
    DO     shift, and go to state 11
    ID     shift, and go to state 12
    NUM    shift, and go to state 13
    '{'    shift, and go to state 1
    '('    shift, and go to state 14
    '-'    shift, and go to state 15

    block  go to state 16
    stmt   go to state 43
    expr   go to state 18


State 41

    8 stmt: WHILE M '(' expr ')' . M stmt

    $default  reduce using rule 19 (M)

    M  go to state 44


State 42

    9 stmt: DO M stmt WHILE M . '(' expr ')' ';'

    '('  shift, and go to state 45


State 43

    7 stmt: IF '(' expr ')' M stmt .

    $default  reduce using rule 7 (stmt)


State 44

    8 stmt: WHILE M '(' expr ')' M . stmt

    IF     shift, and go to state 9
    WHILE  shift, and go to state 10
    DO     shift, and go to state 11
    ID     shift, and go to state 12
    NUM    shift, and go to state 13
    '{'    shift, and go to state 1
    '('    shift, and go to state 14
    '-'    shift, and go to state 15

    block  go to state 16
    stmt   go to state 46
    expr   go to state 18


State 45

    9 stmt: DO M stmt WHILE M '(' . expr ')' ';'

    ID   shift, and go to state 12
    NUM  shift, and go to state 13
    '('  shift, and go to state 14
    '-'  shift, and go to state 15

    expr  go to state 47


State 46

    8 stmt: WHILE M '(' expr ')' M stmt .

    $default  reduce using rule 8 (stmt)


State 47

    9 stmt: DO M stmt WHILE M '(' expr . ')' ';'
   12 expr: expr . '<' expr
   13     | expr . '+' expr
   14     | expr . '*' expr

    '<'  shift, and go to state 25
    '+'  shift, and go to state 26
    '*'  shift, and go to state 27
    ')'  shift, and go to state 48


State 48

    9 stmt: DO M stmt WHILE M '(' expr ')' . ';'

    ';'  shift, and go to state 49


State 49

    9 stmt: DO M stmt WHILE M '(' expr ')' ';' .

    $default  reduce using rule 9 (stmt)
