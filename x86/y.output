State 36 conflicts: 3 shift/reduce


Grammar

    0 $accept: program $end

    1 program: block

    2 $@1: %empty

    3 block: '{' $@1 stmts '}'

    4 stmts: stmts M stmt
    5      | %empty

    6 stmt: expr ';'
    7     | IF '(' expr ')' M stmt
    8     | WHILE M '(' expr ')' M stmt
    9     | DO M stmt WHILE M '(' expr ')' ';'
   10     | block
   11     | method_call ';'

   12 method_call: CALLOUT '(' string_literal callout_args ')'

   13 callout_args: callout_args ',' string_literal
   14             | callout_args ',' expr
   15             | %empty

   16 expr: ID '=' expr
   17     | expr '<' expr
   18     | expr '+' expr
   19     | expr '*' expr
   20     | '-' expr
   21     | '(' expr ')'
   22     | NUM
   23     | ID

   24 M: %empty


Terminals, with rules where they appear

$end (0) 0
'(' (40) 7 8 9 12 21
')' (41) 7 8 9 12 21
'*' (42) 19
'+' (43) 18
',' (44) 13 14
'-' (45) 20
';' (59) 6 9 11
'<' (60) 17
'=' (61) 16
'{' (123) 3
'}' (125) 3
error (256)
IF (258) 7
WHILE (259) 8 9
DO (260) 9
ID (261) 16 23
NUM (262) 22
string_literal (263) 12 13
CALLOUT (264) 12
UMINUS (265)


Nonterminals, with rules where they appear

$accept (22)
    on left: 0
program (23)
    on left: 1, on right: 0
block (24)
    on left: 3, on right: 1 10
$@1 (25)
    on left: 2, on right: 3
stmts (26)
    on left: 4 5, on right: 3 4
stmt (27)
    on left: 6 7 8 9 10 11, on right: 4 7 8 9
method_call (28)
    on left: 12, on right: 11
callout_args (29)
    on left: 13 14 15, on right: 12 13 14
expr (30)
    on left: 16 17 18 19 20 21 22 23, on right: 6 7 8 9 14 16 17 18
    19 20 21
M (31)
    on left: 24, on right: 4 7 8 9


State 0

    0 $accept: . program $end

    '{'  shift, and go to state 1

    program  go to state 2
    block    go to state 3


State 1

    3 block: '{' . $@1 stmts '}'

    $default  reduce using rule 2 ($@1)

    $@1  go to state 4


State 2

    0 $accept: program . $end

    $end  shift, and go to state 5


State 3

    1 program: block .

    $default  reduce using rule 1 (program)


State 4

    3 block: '{' $@1 . stmts '}'

    $default  reduce using rule 5 (stmts)

    stmts  go to state 6


State 5

    0 $accept: program $end .

    $default  accept


State 6

    3 block: '{' $@1 stmts . '}'
    4 stmts: stmts . M stmt

    '}'  shift, and go to state 7

    $default  reduce using rule 24 (M)

    M  go to state 8


State 7

    3 block: '{' $@1 stmts '}' .

    $default  reduce using rule 3 (block)


State 8

    4 stmts: stmts M . stmt

    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    DO       shift, and go to state 11
    ID       shift, and go to state 12
    NUM      shift, and go to state 13
    CALLOUT  shift, and go to state 14
    '{'      shift, and go to state 1
    '('      shift, and go to state 15
    '-'      shift, and go to state 16

    block        go to state 17
    stmt         go to state 18
    method_call  go to state 19
    expr         go to state 20


State 9

    7 stmt: IF . '(' expr ')' M stmt

    '('  shift, and go to state 21


State 10

    8 stmt: WHILE . M '(' expr ')' M stmt

    $default  reduce using rule 24 (M)

    M  go to state 22


State 11

    9 stmt: DO . M stmt WHILE M '(' expr ')' ';'

    $default  reduce using rule 24 (M)

    M  go to state 23


State 12

   16 expr: ID . '=' expr
   23     | ID .

    '='  shift, and go to state 24

    $default  reduce using rule 23 (expr)


State 13

   22 expr: NUM .

    $default  reduce using rule 22 (expr)


State 14

   12 method_call: CALLOUT . '(' string_literal callout_args ')'

    '('  shift, and go to state 25


State 15

   21 expr: '(' . expr ')'

    ID   shift, and go to state 12
    NUM  shift, and go to state 13
    '('  shift, and go to state 15
    '-'  shift, and go to state 16

    expr  go to state 26


State 16

   20 expr: '-' . expr

    ID   shift, and go to state 12
    NUM  shift, and go to state 13
    '('  shift, and go to state 15
    '-'  shift, and go to state 16

    expr  go to state 27


State 17

   10 stmt: block .

    $default  reduce using rule 10 (stmt)


State 18

    4 stmts: stmts M stmt .

    $default  reduce using rule 4 (stmts)


State 19

   11 stmt: method_call . ';'

    ';'  shift, and go to state 28


State 20

    6 stmt: expr . ';'
   17 expr: expr . '<' expr
   18     | expr . '+' expr
   19     | expr . '*' expr

    '<'  shift, and go to state 29
    '+'  shift, and go to state 30
    '*'  shift, and go to state 31
    ';'  shift, and go to state 32


State 21

    7 stmt: IF '(' . expr ')' M stmt

    ID   shift, and go to state 12
    NUM  shift, and go to state 13
    '('  shift, and go to state 15
    '-'  shift, and go to state 16

    expr  go to state 33


State 22

    8 stmt: WHILE M . '(' expr ')' M stmt

    '('  shift, and go to state 34


State 23

    9 stmt: DO M . stmt WHILE M '(' expr ')' ';'

    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    DO       shift, and go to state 11
    ID       shift, and go to state 12
    NUM      shift, and go to state 13
    CALLOUT  shift, and go to state 14
    '{'      shift, and go to state 1
    '('      shift, and go to state 15
    '-'      shift, and go to state 16

    block        go to state 17
    stmt         go to state 35
    method_call  go to state 19
    expr         go to state 20


State 24

   16 expr: ID '=' . expr

    ID   shift, and go to state 12
    NUM  shift, and go to state 13
    '('  shift, and go to state 15
    '-'  shift, and go to state 16

    expr  go to state 36


State 25

   12 method_call: CALLOUT '(' . string_literal callout_args ')'

    string_literal  shift, and go to state 37


State 26

   17 expr: expr . '<' expr
   18     | expr . '+' expr
   19     | expr . '*' expr
   21     | '(' expr . ')'

    '<'  shift, and go to state 29
    '+'  shift, and go to state 30
    '*'  shift, and go to state 31
    ')'  shift, and go to state 38


State 27

   17 expr: expr . '<' expr
   18     | expr . '+' expr
   19     | expr . '*' expr
   20     | '-' expr .

    $default  reduce using rule 20 (expr)


State 28

   11 stmt: method_call ';' .

    $default  reduce using rule 11 (stmt)


State 29

   17 expr: expr '<' . expr

    ID   shift, and go to state 12
    NUM  shift, and go to state 13
    '('  shift, and go to state 15
    '-'  shift, and go to state 16

    expr  go to state 39


State 30

   18 expr: expr '+' . expr

    ID   shift, and go to state 12
    NUM  shift, and go to state 13
    '('  shift, and go to state 15
    '-'  shift, and go to state 16

    expr  go to state 40


State 31

   19 expr: expr '*' . expr

    ID   shift, and go to state 12
    NUM  shift, and go to state 13
    '('  shift, and go to state 15
    '-'  shift, and go to state 16

    expr  go to state 41


State 32

    6 stmt: expr ';' .

    $default  reduce using rule 6 (stmt)


State 33

    7 stmt: IF '(' expr . ')' M stmt
   17 expr: expr . '<' expr
   18     | expr . '+' expr
   19     | expr . '*' expr

    '<'  shift, and go to state 29
    '+'  shift, and go to state 30
    '*'  shift, and go to state 31
    ')'  shift, and go to state 42


State 34

    8 stmt: WHILE M '(' . expr ')' M stmt

    ID   shift, and go to state 12
    NUM  shift, and go to state 13
    '('  shift, and go to state 15
    '-'  shift, and go to state 16

    expr  go to state 43


State 35

    9 stmt: DO M stmt . WHILE M '(' expr ')' ';'

    WHILE  shift, and go to state 44


State 36

   16 expr: ID '=' expr .
   17     | expr . '<' expr
   18     | expr . '+' expr
   19     | expr . '*' expr

    '<'  shift, and go to state 29
    '+'  shift, and go to state 30
    '*'  shift, and go to state 31

    '<'       [reduce using rule 16 (expr)]
    '+'       [reduce using rule 16 (expr)]
    '*'       [reduce using rule 16 (expr)]
    $default  reduce using rule 16 (expr)


State 37

   12 method_call: CALLOUT '(' string_literal . callout_args ')'

    $default  reduce using rule 15 (callout_args)

    callout_args  go to state 45


State 38

   21 expr: '(' expr ')' .

    $default  reduce using rule 21 (expr)


State 39

   17 expr: expr . '<' expr
   17     | expr '<' expr .
   18     | expr . '+' expr
   19     | expr . '*' expr

    '+'  shift, and go to state 30
    '*'  shift, and go to state 31

    '<'  error (nonassociative)

    $default  reduce using rule 17 (expr)


State 40

   17 expr: expr . '<' expr
   18     | expr . '+' expr
   18     | expr '+' expr .
   19     | expr . '*' expr

    '*'  shift, and go to state 31

    $default  reduce using rule 18 (expr)


State 41

   17 expr: expr . '<' expr
   18     | expr . '+' expr
   19     | expr . '*' expr
   19     | expr '*' expr .

    $default  reduce using rule 19 (expr)


State 42

    7 stmt: IF '(' expr ')' . M stmt

    $default  reduce using rule 24 (M)

    M  go to state 46


State 43

    8 stmt: WHILE M '(' expr . ')' M stmt
   17 expr: expr . '<' expr
   18     | expr . '+' expr
   19     | expr . '*' expr

    '<'  shift, and go to state 29
    '+'  shift, and go to state 30
    '*'  shift, and go to state 31
    ')'  shift, and go to state 47


State 44

    9 stmt: DO M stmt WHILE . M '(' expr ')' ';'

    $default  reduce using rule 24 (M)

    M  go to state 48


State 45

   12 method_call: CALLOUT '(' string_literal callout_args . ')'
   13 callout_args: callout_args . ',' string_literal
   14             | callout_args . ',' expr

    ')'  shift, and go to state 49
    ','  shift, and go to state 50


State 46

    7 stmt: IF '(' expr ')' M . stmt

    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    DO       shift, and go to state 11
    ID       shift, and go to state 12
    NUM      shift, and go to state 13
    CALLOUT  shift, and go to state 14
    '{'      shift, and go to state 1
    '('      shift, and go to state 15
    '-'      shift, and go to state 16

    block        go to state 17
    stmt         go to state 51
    method_call  go to state 19
    expr         go to state 20


State 47

    8 stmt: WHILE M '(' expr ')' . M stmt

    $default  reduce using rule 24 (M)

    M  go to state 52


State 48

    9 stmt: DO M stmt WHILE M . '(' expr ')' ';'

    '('  shift, and go to state 53


State 49

   12 method_call: CALLOUT '(' string_literal callout_args ')' .

    $default  reduce using rule 12 (method_call)


State 50

   13 callout_args: callout_args ',' . string_literal
   14             | callout_args ',' . expr

    ID              shift, and go to state 12
    NUM             shift, and go to state 13
    string_literal  shift, and go to state 54
    '('             shift, and go to state 15
    '-'             shift, and go to state 16

    expr  go to state 55


State 51

    7 stmt: IF '(' expr ')' M stmt .

    $default  reduce using rule 7 (stmt)


State 52

    8 stmt: WHILE M '(' expr ')' M . stmt

    IF       shift, and go to state 9
    WHILE    shift, and go to state 10
    DO       shift, and go to state 11
    ID       shift, and go to state 12
    NUM      shift, and go to state 13
    CALLOUT  shift, and go to state 14
    '{'      shift, and go to state 1
    '('      shift, and go to state 15
    '-'      shift, and go to state 16

    block        go to state 17
    stmt         go to state 56
    method_call  go to state 19
    expr         go to state 20


State 53

    9 stmt: DO M stmt WHILE M '(' . expr ')' ';'

    ID   shift, and go to state 12
    NUM  shift, and go to state 13
    '('  shift, and go to state 15
    '-'  shift, and go to state 16

    expr  go to state 57


State 54

   13 callout_args: callout_args ',' string_literal .

    $default  reduce using rule 13 (callout_args)


State 55

   14 callout_args: callout_args ',' expr .
   17 expr: expr . '<' expr
   18     | expr . '+' expr
   19     | expr . '*' expr

    '<'  shift, and go to state 29
    '+'  shift, and go to state 30
    '*'  shift, and go to state 31

    $default  reduce using rule 14 (callout_args)


State 56

    8 stmt: WHILE M '(' expr ')' M stmt .

    $default  reduce using rule 8 (stmt)


State 57

    9 stmt: DO M stmt WHILE M '(' expr . ')' ';'
   17 expr: expr . '<' expr
   18     | expr . '+' expr
   19     | expr . '*' expr

    '<'  shift, and go to state 29
    '+'  shift, and go to state 30
    '*'  shift, and go to state 31
    ')'  shift, and go to state 58


State 58

    9 stmt: DO M stmt WHILE M '(' expr ')' . ';'

    ';'  shift, and go to state 59


State 59

    9 stmt: DO M stmt WHILE M '(' expr ')' ';' .

    $default  reduce using rule 9 (stmt)
